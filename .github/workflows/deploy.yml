name: Build & Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push backend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/notes-backend ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/notes-backend

      - name: Build and push frontend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/notes-frontend --build-arg VITE_API_URL=/api ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/notes-frontend

      - name: Build and push caddy (with baked-in Caddyfile)
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/notes-caddy -f Dockerfile.caddy .
          docker push ${{ secrets.DOCKER_USERNAME }}/notes-caddy

  deploy:
    name: Deploy to EC2
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Copy docker-compose.prod.yml to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: docker-compose.prod.yml
          target: ~/app

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            mkdir -p ~/app
            cd ~/app
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d --remove-orphans
